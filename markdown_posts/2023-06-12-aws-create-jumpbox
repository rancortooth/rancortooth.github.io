---
date: "2023-06-12"
title: How to Create a Jump-box (bastion) in AWS to Reach Resources in a Private Subnet
image: robot-roo.png
categories: AWS
tags: aws, devops
---
##### (image generated with stable_diffusion.openvino)

# How to create a jump-box in AWS to reach resources in a private subnet

## What's a Jump-box?

A jump-box, or bastion host, is an EC2 instance which is exposed to the internet with port 22 open. Users connect to this host in order to reach resources in private subnets, which are not exposed to the internet.

## The network architecture
<img src="assets/images/aws-jumpbox.jpg" width="100%"><br/>

In application architectures, it's common to have secure resources located within a private subnet in order to shield them from internet access. A "private" subnet has no routes to a NAT Gateway or Internet Gateway and its compute resources will not have public IP addresses. In order to access these private resources from outside the VPC, we'll need to create an EC2 instance in a public subnet and with a public IP address.

## The Jump-box Setup

* If you don't have one already, create another subnet to act as your public subnet:
    * In the AWS console, go to: VPC --> Subnets --> Create subnet
* Your VPC will need an Internet Gateway (IGW) associated with it
    * If you don't have an IGW, go to: VPC --> Internet Gateways --> Create Internet Gateway (Note: AWS charges for traffic through an IGW)
    * Make sure your IGW is attached to your VPC: VPC --> Internet Gateways --> Select your IGW --> Attach to VPC
    * Make sure your public subnet has a route for "0.0.0.0/0" to the IGW in its route table: VPC --> Route tables --> select your route table --> Edit routes
    * Note: If you create a new route table rather than use the VPC's default route table, make sure the route table has been associated to your public subnet
<p>
<img src="assets/images/igw_route.jpg" width="80%">

## Creating the Jump-box

### Create a key pair for use with the Jump-box
In the console, go to: EC2 --> Key Pairs --> Create key pair
* Select "pem" as the type if you're on linux (also, do a "chmod 600" to the downloaded file or else ssh will complain)
* Keep the downloaded private key handy so you can ssh onto your jump-box later

<p>

### Launch an EC2 instance in the public subnet
In the console, go to: EC2 --> Instances --> Launch Instances

#### EC2 instance settings:
* Instance Type = t2.micro (recommended)
* OS = Amazon Linux 2 (recommended)
* Select the key you created above
* Edit the network settings and make sure:
    * You select your VPC
    * You select your public subnet
    * Auto-assign public IP should be Enabled
* Edit the inbound security group rules so that it allows port 22 from "My IP" only, not the open internet, (i.e. 0.0.0.0/0)
* Other details can be left at their defaults

<p>

### Add a rule to your private resource's security group to allow port 22 from jump-box
Whatever your private resource is (EC2 instance, ECS task, RDS, etc.) you should edit its security group and add a rule that allows access to port 22 from the jump-box's security group. Adding a rule that allows access to a security group is like saying "allow any resources which use this security group to access me on this port".
<p>
<img src="assets/images/aws-jumpbox2.jpg" width="80%">
<p>

# Connecting to your private compute resource
## Get the public IP address
The public IP address of the jumpbox can be found in the AWS console at:
* EC2 --> Instances --> (your jumpbox instance) --> Public IPv4 address

## Use SSH to connect to your jumpbox from your local machine
```
# When we ssh onto the jumpbox, we need to pass our private key along
# with us so we can ssh onto the private instance afterward. The
# private instance can have its own key or the same as the jumpbox.

# Start-up the ssh-agent to store our keys
eval "$(ssh-agent -s)"

# Add our key to the agent (could be multiple keys here if needed)
ssh-add my_key.pem
-> Identity added: my_key.pem (my_key.pem)

#
# SSH onto the jumpbox using the public IP address
#   '-A' tells ssh to pass along the agent's keys
#   'ec2-user' is the default user on EC2 instances. This could be
#              different dependin on what AMI is used.
#    
ssh -A ec2-user@1.2.3.4
->
Last login: Tue Jun 13 18:47:52 2023 from blah blah

       __|  __|_  )
       _|  (     /   Amazon Linux 2 AMI
      ___|\___|___|
$
```
## From the jump-box, ssh onto your private EC2 instance
SSH onto the private EC2 instance using its private IP address
```
ssh 10.0.0.0
```

## Private resources other than an EC2 instance
A jump-box such as this can also help connect to private ECS tasks via their private IP addresses. You can also install utilities on the jump-box, such as database tools, for working on private RDS instances.